{"version":3,"sources":["./src/app/services/atlanta-service.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/birmingham.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AtlantaService {\n\n  constructor(private http: HttpClient){}\n\n  getAll(): Observable<any> {\n    return this.http.get('assets/data/atlanta.json');\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {AfterViewInit, Component} from '@angular/core';\nimport * as L from 'leaflet';\nimport {Control, tileLayer} from 'leaflet';\nimport {BirminghamService} from './services/birmingham.service';\nimport {AtlantaService} from './services/atlanta-service';\nimport {combineLatest} from 'rxjs';\nimport Layers = Control.Layers;\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements AfterViewInit {\n    title = 'LeafletDemo';\n    private map;\n\n    constructor(private birminghamService: BirminghamService, private atlantaService: AtlantaService) {\n    }\n\n    ngAfterViewInit(): void {\n        this.initMap();\n        const layerSwitcher = this.loadBaseMaps(this.map);\n        const boundGroup = new L.FeatureGroup(); // hold features for fit bounds\n        const birmingham$ = this.birminghamService.getAll();\n        const atlanta$ = this.atlantaService.getAll();\n        // using combineLatest. after everything is loaded i want to center the map\n        combineLatest(birmingham$, atlanta$).subscribe(([birminghamResults, atlantaResults]: any) => {\n                const birminghamLayer = new L.FeatureGroup();\n                birminghamResults.features.forEach(result => {\n                    const tmp = L.geoJSON(result, {\n                        style: (() => {\n                            return {weight: 1, fillColor: 'red', fillOpacity: 0.5};\n                        })\n                    });\n                    tmp.bindPopup('');\n                    birminghamLayer.addLayer(tmp);\n                    boundGroup.addLayer(tmp);\n                });\n                birminghamLayer.addTo(this.map);\n                layerSwitcher.addOverlay(birminghamLayer, 'Birmingham');\n\n                const atlantaLayer = new L.FeatureGroup();\n                atlantaResults.features.forEach(result => {\n                    const tmp = L.geoJSON(result, {\n                        style: (() => {\n                            return {weight: 1, fillColor: 'red', fillOpacity: 0.5};\n                        })\n                    });\n                    tmp.bindPopup('');\n                    atlantaLayer.addLayer(tmp);\n                    boundGroup.addLayer(tmp);\n                });\n                atlantaLayer.addTo(this.map);\n                layerSwitcher.addOverlay(atlantaLayer, 'Atlanta');\n                if (boundGroup.getBounds().isValid()) {\n                    this.map.fitBounds(boundGroup.getBounds());\n                }\n                boundGroup.clearLayers().remove();\n            }\n        );\n    }\n\n    private initMap(): void {\n        this.map = L.map('map', {\n            center: [33.520912, -86.849564],\n            zoom: 9\n        });\n        this.map.on('popupopen', (e => {\n            let result = '';\n            const src = e.popup._source;\n            for (const key in src.feature.properties) {\n                if (Object.prototype.hasOwnProperty.call(src.feature.properties, key)) {\n                    console.log(key + ' - ' + src.feature.properties[key]);\n                    result = result + `<div><strong>${key}</strong>:${src.feature.properties[key]}</div>`;\n                }\n            }\n            e.popup.setContent(result);\n        }));\n    }\n\n    loadBaseMaps(map: any): Layers {\n        const openStreetMap = tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n            detectRetina: true,\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(map);\n        const mapboxStreet = tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n            attribution: '© <a href=\"https://www.mapbox.com/about/maps/\">Mapbox</a> © <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> <strong><a href=\"https://www.mapbox.com/map-feedback/\" target=\"_blank\">Improve this map</a></strong>',\n            tileSize: 512,\n            maxZoom: 18,\n            zoomOffset: -1,\n            id: 'mapbox/streets-v11',\n            accessToken: 'pk.eyJ1Ijoia2VtZXJ5YW1hciIsImEiOiJja3VlaWNkMmkwY3NhMnBudmNyMWQxZXNwIn0.uaRmmk3I8ijkdfzuKUJWLw'\n        });\n        const mapboxOutdoor = tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n            attribution: '© <a href=\"https://www.mapbox.com/about/maps/\">Mapbox</a> © <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> <strong><a href=\"https://www.mapbox.com/map-feedback/\" target=\"_blank\">Improve this map</a></strong>',\n            tileSize: 512,\n            maxZoom: 18,\n            zoomOffset: -1,\n            id: 'mapbox/outdoors-v11',\n            accessToken: 'pk.eyJ1Ijoia2VtZXJ5YW1hciIsImEiOiJja3VlaWNkMmkwY3NhMnBudmNyMWQxZXNwIn0.uaRmmk3I8ijkdfzuKUJWLw'\n        });\n        const mapboxLight = tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n            attribution: '© <a href=\"https://www.mapbox.com/about/maps/\">Mapbox</a> © <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> <strong><a href=\"https://www.mapbox.com/map-feedback/\" target=\"_blank\">Improve this map</a></strong>',\n            tileSize: 512,\n            maxZoom: 18,\n            zoomOffset: -1,\n            id: 'mapbox/light-v10',\n            accessToken: 'pk.eyJ1Ijoia2VtZXJ5YW1hciIsImEiOiJja3VlaWNkMmkwY3NhMnBudmNyMWQxZXNwIn0.uaRmmk3I8ijkdfzuKUJWLw'\n        });\n        const mapboxDark = tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n            attribution: '© <a href=\"https://www.mapbox.com/about/maps/\">Mapbox</a> © <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> <strong><a href=\"https://www.mapbox.com/map-feedback/\" target=\"_blank\">Improve this map</a></strong>',\n            tileSize: 512,\n            maxZoom: 18,\n            zoomOffset: -1,\n            id: 'mapbox/dark-v10',\n            accessToken: 'pk.eyJ1Ijoia2VtZXJ5YW1hciIsImEiOiJja3VlaWNkMmkwY3NhMnBudmNyMWQxZXNwIn0.uaRmmk3I8ijkdfzuKUJWLw'\n        });\n        const mapboxSatellite = tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n            attribution: '© <a href=\"https://www.mapbox.com/about/maps/\">Mapbox</a> © <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> <strong><a href=\"https://www.mapbox.com/map-feedback/\" target=\"_blank\">Improve this map</a></strong>',\n            tileSize: 512,\n            maxZoom: 18,\n            zoomOffset: -1,\n            id: 'mapbox/satellite-v9',\n            accessToken: 'pk.eyJ1Ijoia2VtZXJ5YW1hciIsImEiOiJja3VlaWNkMmkwY3NhMnBudmNyMWQxZXNwIn0.uaRmmk3I8ijkdfzuKUJWLw'\n        });\n        const mapboxSatelliteStreets = tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n            attribution: '© <a href=\"https://www.mapbox.com/about/maps/\">Mapbox</a> © <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> <strong><a href=\"https://www.mapbox.com/map-feedback/\" target=\"_blank\">Improve this map</a></strong>',\n            tileSize: 512,\n            maxZoom: 18,\n            zoomOffset: -1,\n            id: 'mapbox/satellite-streets-v11',\n            accessToken: 'pk.eyJ1Ijoia2VtZXJ5YW1hciIsImEiOiJja3VlaWNkMmkwY3NhMnBudmNyMWQxZXNwIn0.uaRmmk3I8ijkdfzuKUJWLw'\n        });\n        const baseMaps = {\n            'OpenStreetMap': openStreetMap,\n            'Mapbox Street': mapboxStreet,\n            'Mapbox Outdoor': mapboxOutdoor,\n            'Mapbox Light': mapboxLight,\n            'Mapbox Dark': mapboxDark,\n            'Mapbox Satellite': mapboxSatellite,\n            'Mapbox Satellite Streets': mapboxSatelliteStreets\n        };\n        return L.control.layers(baseMaps).addTo(map);\n    }\n\n}\n","<div class=\"map-container\">\n  <div class=\"map-frame\">\n    <div id=\"map\"></div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {BirminghamService} from './services/birmingham.service';\nimport {HttpClientModule} from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [BirminghamService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BirminghamService {\n\n  constructor(private http: HttpClient){}\n\n  getAll(): Observable<any> {\n    return this.http.get('assets/data/birmingham.json');\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}